@model SalesWebMvc.Models.ViewModels.SellerFormViewModel

@{
    ViewData["Title"] = "Create Seller";
}

<h1>@ViewData["Title"]</h1>

<div>
    <form asp-action="Create">
        <div asp-validation-summary="All" class="is-invalid">
        </div>
        <div class="form-group">
            <label asp-for="Seller.Name" class="control-label"></label>
            <input asp-for="Seller.Name" class="form-control" />
            <span asp-validation-for="Seller.Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Seller.Email" class="control-label"></label>
            <input asp-for="Seller.Email" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="Seller.BirthDate" class="control-label"></label>
            <input asp-for="Seller.BirthDate" class="form-control" />
            <span asp-validation-for="Seller.BirthDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Seller.BaseSalary" class="control-label"></label>
            <input asp-for="Seller.BaseSalary" class="form-control" />
            <span asp-validation-for="Seller.BaseSalary" class="text-danger"></span>
        </div>
        <div>
            <label asp-for="Seller.DepartmentId"></label>
            <select asp-for="Seller.DepartmentId" asp-items="@(new SelectList(Model.Departments, "Id", "Name"))"></select>
        </div>
        <button class="btn-success">Create</button>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}